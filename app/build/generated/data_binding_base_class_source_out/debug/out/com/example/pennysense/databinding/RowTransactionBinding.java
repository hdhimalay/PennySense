// Generated by view binder compiler. Do not edit!
package com.example.pennysense.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pennysense.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowTransactionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView accountLbl;

  @NonNull
  public final ImageView categoryIcon;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final TextView transactionAmount;

  @NonNull
  public final TextView transactionCategory;

  @NonNull
  public final TextView transactionDate;

  private RowTransactionBinding(@NonNull ConstraintLayout rootView, @NonNull TextView accountLbl,
      @NonNull ImageView categoryIcon, @NonNull LinearLayout linearLayout3,
      @NonNull TextView transactionAmount, @NonNull TextView transactionCategory,
      @NonNull TextView transactionDate) {
    this.rootView = rootView;
    this.accountLbl = accountLbl;
    this.categoryIcon = categoryIcon;
    this.linearLayout3 = linearLayout3;
    this.transactionAmount = transactionAmount;
    this.transactionCategory = transactionCategory;
    this.transactionDate = transactionDate;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accountLbl;
      TextView accountLbl = ViewBindings.findChildViewById(rootView, id);
      if (accountLbl == null) {
        break missingId;
      }

      id = R.id.categoryIcon;
      ImageView categoryIcon = ViewBindings.findChildViewById(rootView, id);
      if (categoryIcon == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.transactionAmount;
      TextView transactionAmount = ViewBindings.findChildViewById(rootView, id);
      if (transactionAmount == null) {
        break missingId;
      }

      id = R.id.transactionCategory;
      TextView transactionCategory = ViewBindings.findChildViewById(rootView, id);
      if (transactionCategory == null) {
        break missingId;
      }

      id = R.id.transactionDate;
      TextView transactionDate = ViewBindings.findChildViewById(rootView, id);
      if (transactionDate == null) {
        break missingId;
      }

      return new RowTransactionBinding((ConstraintLayout) rootView, accountLbl, categoryIcon,
          linearLayout3, transactionAmount, transactionCategory, transactionDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
